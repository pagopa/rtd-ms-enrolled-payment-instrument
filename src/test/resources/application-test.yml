logging:
  level:
    root: INFO

test.kafka.topic: "embedded-test-topic"
test.kafka.topic-tkm: "embedded-test-topic-tkm"

spring:
  config:
    activate:
      on-profile: test

#  kafka:
#    template.default-topic: ${test.kafka.topic}
#    bootstrap-servers:
#      - ${spring.embedded.kafka.brokers}
#    producer:
#      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      value-serializer: org.apache.kafka.common.serialization.StringSerializer

  cloud:
    function:
      definition: enrolledPaymentInstrumentConsumer;tkmTokenUpdateConsumer
    stream:
      bindings:
        enrolledPaymentInstrumentConsumer-in-0:
          destination: ${test.kafka.topic}
          group: rtd-enrolled-payment-instrument-consumer-group
          binder: kafka-binder

        tkmTokenUpdateConsumer-in-0:
          destination: ${test.kafka.topic-tkm}
          group: rtd-pim-consumer-group
          content-type: application/json
          binder: kafka-binder
      binders:
        kafka-binder:
          type: kafka
          environment:
            spring.cloud.stream.kafka:
              binder:
                auto-create-topics: false
                brokers: ${spring.embedded.kafka.brokers}
                consumerProperties:
                  key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
                  value.deserializer: org.apache.kafka.common.serialization.StringDeserializer
                producerProperties:
                  key.serializer: org.apache.kafka.common.serialization.StringSerializer
                  value.serializer: org.apache.kafka.common.serialization.StringSerializer

---
spring:
  config:
    activate:
      on-profile: mongo-integration-test