logging:
  level:
    root: INFO
    org.apache.kafka: WARN

immediate-confirm-export: ${IMMEDIATE_CONFIRM_EXPORT:false}

management:
  metrics.export.defaults.enabled: false
  info.defaults.enabled: false
  endpoints.enabled-by-default: false
  endpoint:
    health:
      enabled: true
      probes:
        enabled: true

# bpd-url null means fake mode
revoke-notification:
  bpd-url: ${BASEURL_BPD_DELETE_CARD:#{null}}

instrument-token-finder:
  url: ${BASEURL_TOKEN_FINDER:#{null}}
  api-key: ${API_KEY_TOKEN_FINDER:#{null}}

## Topics and consumer groups
topics:
  rtd-pi-to-app:
    topic: ${KAFKA_RTD_PI_TO_APP:rtd-pi-to-app}
  rtd-slit-by-pi:
    topic: ${KAFKA_RTD_SPLIT_TOPIC:rtd-split-by-pi}
    group: ${KAFKA_RTD_SPLIT_CONSUMER_GROUP:rtd-split-by-pi-consumer-group}

spring:
  config:
    activate:
      on-profile: default

  data:
    mongodb:
      uri: ${MONGODB_CONNECTION_URI:mongodb://localhost:27017}
      database: ${MONGODB_NAME:rtd}

  cloud:
    function:
      definition: functionRouter
    stream:
      function.routing.enabled: true
      bindings:
        functionRouter-in-0:
          destination: ${topics.rtd-slit-by-pi.topic}
          group: ${topics.rtd-slit-by-pi.group}
          content-type: application/json
          binder: kafka-split-by-pi-binder
          consumer:
            concurrency: ${KAFKA_RTD_SPLIT_BY_PI_CONCURRENCY:1}
            max-attempts: 1
            default-retryable: false
        rtdToApp-out-0:
          destination: ${topics.rtd-pi-to-app.topic}
          content-type: application/json
          binder: kafka-to-app-binder
          producer:
            partitionKeyExpression: headers.partitionKey
            partitionCount: ${KAFKA_RTD_PI_TO_APP_PARTITION_COUNT:1}
            sync: true

      binders:
        kafka-to-app-binder:
          type: kafka
          environment.spring.cloud.stream.kafka:
            binder:
              brokers: ${KAFKA_RTD_PI_TO_APP_BROKER:localhost:29095}
              sync: true
              requiredAcks: all
              configuration:
                sasl.jaas.config: ${KAFKA_RTD_PI_TO_APP_SASL_JAAS_CONFIG}

        kafka-split-by-pi-binder:
          type: kafka
          environment.spring.cloud.stream.kafka:
            binder:
              brokers: ${KAFKA_RTD_SPLIT_BROKER:localhost:29095}
              configuration:
                sasl.jaas.config: ${KAFKA_RTD_SPLIT_SASL_JAAS_CONFIG}
              consumerProperties:
                key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
                value.deserializer: org.apache.kafka.common.serialization.StringDeserializer

      kafka:
        binder:
          auto-create-topics: false
          configuration:
            security.protocol: SASL_SSL
            sasl.mechanism: PLAIN
        bindings:
          functionRouter-in-0:
            consumer:
              ackMode: RECORD
              commonErrorHandlerBeanName: errorHandler
              configuration:
                max.poll.records: ${MAX_POLL_RECORD:1}


