logging:
  level:
    root: INFO

spring:
  config:
      activate:
        on-profile: default

  data:
    mongodb:
      uri: ${MONGODB_CONNECTION_URI:mongodb://localhost:27017}
      database: ${MONGODB_NAME:rtd}

  cloud:
    stream:
      bindings:
        enrolledPaymentInstrumentProcessor-out-0:
          destination: ${KAFKA_TOPIC_EVENTS:rtd-enrolled-events}

        enrolledPaymentInstrumentConsumer-in-0:
          destination: ${KAFKA_TOPIC_EVENTS:rtd-enrolled-events}
          group: rtd-enrolled-payment-instrument-consumer-group
          content-type: application/json
          binder: kafka-binder
          consumer:
            max-attempts: 1
            autoCommitOffset: false

        enrolledPaymentInstrumentProducer-out-0:
          destination: ${KAFKA_TOPIC_EVENTS:rtd-enrolled-events}
          content-type: application/json
          binder: kafka-binder
          producer:
            partitionKeyExpression: ${KAFKA_PARTITION_KEY_EXPRESSION:headers.partitionKey}
            partitionCount: ${KAFKA_PARTITION_COUNT:1}

      binders:
        kafka-binder:
          type: kafka
          environment:
            spring.cloud.stream.kafka:
              binder:
                auto-create-topics: false
                brokers: ${KAFKA_BROKER:localhost:29095}
                configuration:
                  max.poll.records: 1
                  sasl:
                    jaas.config: ${KAFKA_SASL_JAAS_CONFIG_CONSUMER_ENROLLED_PI}
                    mechanism: PLAIN
                  security.protocol: SASL_SSL
                consumerProperties:
                  key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
                  value.deserializer: org.apache.kafka.common.serialization.StringDeserializer
