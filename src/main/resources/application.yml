logging:
  level:
    root: INFO

spring:
  config:
    activate:
      on-profile: default

  data:
    mongodb:
      uri: ${MONGODB_CONNECTION_URI:mongodb://localhost:27017}
      database: ${MONGODB_NAME:rtd}

  cloud:
    function:
      definition: enrolledPaymentInstrumentConsumer;tkmTokenUpdateConsumer
    stream:
      bindings:
        enrolledPaymentInstrumentConsumer-in-0:
          destination: ${KAFKA_TOPIC_EVENTS:rtd-enrolled-events}
          group: rtd-enrolled-payment-instrument-consumer-group
          content-type: application/json
          binder: kafka-enrolled-binder
          consumer:
            max-attempts: 1

        tkmTokenUpdateConsumer-in-0:
          destination: ${KAFKA_TOPIC_TKM_BROKER:tkm-write-update-token}
          group: rtd-pim-consumer-group
          content-type: application/json
          binder: kafka-tkm-binder
          consumer:
            max-attempts: 1

        enrolledPaymentInstrumentProducer-out-0:
          destination: ${KAFKA_TOPIC_EVENTS:rtd-enrolled-events}
          content-type: application/json
          binder: kafka-enrolled-binder
          producer:
            partitionKeyExpression: ${KAFKA_PARTITION_KEY_EXPRESSION:headers.partitionKey}
            partitionCount: ${KAFKA_PARTITION_COUNT:1}

#      kafka:
#        binder:
#          configuration:
#            security.protocol: SASL_SSL
#            sasl.mechanism: PLAIN

      binders:
        kafka-enrolled-binder:
          type: kafka
          environment.spring.cloud.stream.kafka:
            binder:
              auto-create-topics: false
              brokers: ${KAFKA_BROKER:localhost:29095}
              configuration:
                max.poll.records: 1
                sasl.jaas.config: ${KAFKA_SASL_JAAS_CONFIG_CONSUMER_ENROLLED_PI}
              consumerProperties:
                key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
                value.deserializer: org.apache.kafka.common.serialization.StringDeserializer
        kafka-tkm-binder:
          type: kafka
          environment.spring.cloud.stream.kafka:
            binder:
              auto-create-topics: false
              brokers: ${KAFKA_BROKER_TKM:localhost:29095}
              configuration:
                max.poll.records: 1
                sasl.jaas.config: ${KAFKA_SASL_JAAS_CONFIG_TKM_PIM}
              consumerProperties:
                key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
                value.deserializer: org.apache.kafka.common.serialization.StringDeserializer
